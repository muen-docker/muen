TOP_DIR := $(patsubst %/,%,$(dir $(realpath $(filter %Makeconf, $(MAKEFILE_LIST)))))
SRC_DIR = $(CURDIR)/src
OBJ_DIR = $(CURDIR)/obj
GEN_DIR = $(CURDIR)/generated

include $(TOP_DIR)/projects/exec.mk

NUM_CPUS  ?= $(shell getconf _NPROCESSORS_ONLN)
BUILD_OPTS = -p -j$(NUM_CPUS)

KERNEL_STACK_SIZE    = 4096
COMPONENT_STACK_SIZE = 8192

ifeq (,$(NO_CONTRIB))
CONTRIB_DIR := $(TOP_DIR)/contrib
CONTRIB_BUILD_DIR := $(CONTRIB_DIR)/build
export ADA_PROJECT_PATH := $(CONTRIB_BUILD_DIR)/share/gpr:$(CONTRIB_DIR)/projects:$(ADA_PROJECT_PATH)
endif

PREFIX = $(HOME)

POLICY_DIR       ?= $(TOP_DIR)/policy
POLICY_OBJ_DIR   ?= $(POLICY_DIR)/obj
POLICY_CSPEC_DIR ?= $(POLICY_OBJ_DIR)/cspecs

PACK_OBJ_DIR ?= $(TOP_DIR)/pack/obj

SYSTEM      ?= xml/demo_system_vtd.xml
SYSTEM_NAME  = $(patsubst %.xml,%,$(notdir $(SYSTEM)))
SYSTEM_DIR   = $(dir $(SYSTEM))

POLICY_SRC ?= $(POLICY_OBJ_DIR)/policy_src.xml
POLICY_A   ?= $(POLICY_OBJ_DIR)/policy_a.xml
POLICY_B   ?= $(POLICY_OBJ_DIR)/policy_b.xml

POLICY_B_HASH ?= $(PACK_OBJ_DIR)/policy_b.xml
POLICY_B_CMDS ?= $(PACK_OBJ_DIR)/policy_b_cmds.xml

KERNEL_BUILD ?= debug

MUGENSCHEDCFG_DIR ?= $(TOP_DIR)/tools/mugenschedcfg

CSPECS_DIR ?= $(POLICY_DIR)/xml

TAU0_STATIC ?= $(TOP_DIR)/components/tau0-static/bin/tau0_main

MUCBINSPLIT    ?= $(TOP_DIR)/tools/mucbinsplit/bin/mucbinsplit
MUCFGALLOC     ?= $(TOP_DIR)/tools/mucfgalloc/bin/mucfgalloc
MUCFGCJOIN     ?= $(TOP_DIR)/tools/mucfgcjoin/bin/mucfgcjoin
MUCFGEXPAND    ?= $(TOP_DIR)/tools/mucfgexpand/bin/mucfgexpand
MUCFGMEMHASHES ?= $(TOP_DIR)/tools/mucfgmemhashes/bin/mucfgmemhashes
MUCFGMERGE     ?= $(TOP_DIR)/tools/mucfgmerge/bin/mucfgmerge
MUCFGVALIDATE  ?= $(TOP_DIR)/tools/mucfgvalidate/bin/mucfgvalidate
MUCHECKELF     ?= $(TOP_DIR)/tools/mucheckelf/bin/mucheckelf
MUCHECKSTACK   ?= $(TOP_DIR)/tools/mucheckstack/bin/mucheckstack
MUCGENSPEC     ?= $(TOP_DIR)/tools/mucgenspec/bin/mucgenspec
MUGENACPI      ?= $(TOP_DIR)/tools/mugenacpi/bin/mugenacpi
MUGENMANIFEST  ?= $(TOP_DIR)/tools/scripts/mugenmanifest.py
MUGENMSRSTORE  ?= $(TOP_DIR)/tools/mugenmsrstore/bin/mugenmsrstore
MUGENSCHEDCFG  ?= $(MUGENSCHEDCFG_DIR)/bin/mugenschedcfg
MUGENSINFO     ?= $(TOP_DIR)/tools/mugensinfo/bin/mugensinfo
MUGENSOLO5     ?= $(TOP_DIR)/tools/mugensolo5/bin/mugensolo5
MUGENSPEC      ?= $(TOP_DIR)/tools/mugenspec/bin/mugenspec
MUGENTAU0CMDS  ?= $(TOP_DIR)/tools/mugentau0cmds/bin/mugentau0cmds
MUGENZP        ?= $(TOP_DIR)/tools/mugenzp/bin/mugenzp
MULNXBZPATCH   ?= $(TOP_DIR)/tools/mulnxbzpatch/bin/mulnxbzpatch

XML2ADA     ?= $(TOP_DIR)/tools/scripts/xml2ada
RESOLVE_XSL ?= $(TOP_DIR)/tools/libmuxml/schema/resolve.xsl

TO_RAW_OPTS = -O binary \
	--set-section-flags .bss=alloc,load,contents \
	--set-section-flags .stack=alloc,load,contents
TO_RAW_CMD  = objcopy $(TO_RAW_OPTS)

HARDWARE      ?= hardware/qemu-kvm.xml
ADDITIONAL_HW ?= hardware/common_hardware.xml
PLATFORM      ?= platform/$(notdir $(HARDWARE))

SPARK_OPTS =                     \
	--warnings=$(SPARK_WARNINGS) \
	--report=$(SPARK_REPORT)     \
	--level=$(SPARK_LEVEL)       \
	-f                           \
	-k                           \
	--proof=progressive          \
	--prover=$(SPARK_PROVERS)    \
	--timeout=$(SPARK_TIMEOUT)   \
	--mode=$(SPARK_MODE)         \
	--output=$(SPARK_OUTPUT)     \
	--counterexamples=off        \
	--no-inlining                \
	-Xbuild=prove                \
	$(SPARK_MEMCACHED_OPTION)    \
	-j$(NUM_CPUS)                \
	$(SPARK_EXTRA_OPTS)

SPARK_LEVEL         ?= 2
SPARK_MODE          ?= all
SPARK_OUTPUT        ?= oneline
SPARK_PROVERS       ?= z3,cvc4,alt-ergo
SPARK_REPORT        ?= all
SPARK_TIMEOUT       ?= 10
SPARK_WARNINGS      ?= error
SPARK_SUMMARY_LINES ?= 18

GNATPROVE_DATE := $(shell gnatprove --version 2>/dev/null | head -1 | cut -d "(" -f2 | cut -d ")" -f1)
ifeq ($(GNATPROVE_DATE),)
	GNATPROVE_DATE := 0
endif

ifneq (,$(SPARK_MEMCACHED))
SPARK_MEMCACHED_SERVER ?= localhost
SPARK_MEMCACHED_PORT   ?= 11211
SPARK_MEMCACHED_OPTION := --memcached-server=$(SPARK_MEMCACHED_SERVER):$(SPARK_MEMCACHED_PORT)
endif

SBS_CREATE  ?= $(TOP_DIR)/tools/sbs/bin/sbs_create
SBS_INSPECT ?= $(TOP_DIR)/tools/sbs/bin/sbs_inspect
SBS_PRIVKEY ?= $(TOP_DIR)/tools/sbs/data/gpg-homedir
